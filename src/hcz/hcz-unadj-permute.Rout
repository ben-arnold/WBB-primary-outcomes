
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #---------------------------------------
> # hcz-unadj-permute.R
> #
> # ben arnold (benarnold@berkeley.edu)
> #
> # unadjusted permutation tests for
> # differences in hcz at year 1 and year 2
> # follow-ups
> #---------------------------------------
> 
> #---------------------------------------
> # preamble
> #---------------------------------------
> rm(list=ls())
> library(plyr)
> library(coin)
Loading required package: survival
> 
> # source the base functions
> # which includes the permutation test function used below
> source("~/WBBpa/src/basefns/washb-base-functions.R")
> 
> 
> #---------------------------------------
> # load the anthropometry analysis data
> #---------------------------------------
> d <- read.csv("~/dropbox/WBB-primary-analysis/data/final/ben/washb-bangladesh-anthro.csv")
> 
> d$block <- as.factor(d$block)
> 
> # subset the anthropometry to target children (excluding siblings)
> dim(d)
[1] 9341   49
> d <- subset(d,tchild=="Target child")
> dim(d)
[1] 9341   49
> 
> # Drop children with extreme hcz values
> table(d$hcz_x)

   0    1 
9302   32 
> d <- subset(d,hcz_x!=1)
> 
> # Exclude children with missing data (none)
> table(is.na(d$hcz))

FALSE 
 9302 
> 
> #---------------------------------------
> # YEAR 1
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4691 4611 
> ad <- subset(d,svy==1)
> dim(ad)
[1] 4691   49
> 
> # Hypothesis 1 permutation tests
> set.seed(2342)
> permute.1.C.W <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.3781, p-value = 0.1683
alternative hypothesis: true mu is not equal to 0

> permute.1.C.S <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.54923, p-value = 0.5887
alternative hypothesis: true mu is not equal to 0

> permute.1.C.H <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.47681, p-value = 0.6389
alternative hypothesis: true mu is not equal to 0

> permute.1.C.WSH <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.63172, p-value = 0.5289
alternative hypothesis: true mu is not equal to 0

> permute.1.C.N   <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.1788, p-value = 0.02854
alternative hypothesis: true mu is not equal to 0

> permute.1.C.NWSH <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.4988, p-value = 0.1371
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(4524)
> permute.1.N.WSHN   <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.93551, p-value = 0.3547
alternative hypothesis: true mu is not equal to 0

> permute.1.WSH.NWSH <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.8449, p-value = 0.06427
alternative hypothesis: true mu is not equal to 0

> 
> #---------------------------------------
> # YEAR 2
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4691 4611 
> ad <- subset(d,svy==2)
> dim(ad)
[1] 4611   49
> 
> # Hypothesis 1 permutation tests
> set.seed(523423)
> permute.2.C.W <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.58947, p-value = 0.5603
alternative hypothesis: true mu is not equal to 0

> permute.2.C.S <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.15491, p-value = 0.8781
alternative hypothesis: true mu is not equal to 0

> permute.2.C.H <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.54923, p-value = 0.5836
alternative hypothesis: true mu is not equal to 0

> permute.2.C.WSH <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.55728, p-value = 0.5798
alternative hypothesis: true mu is not equal to 0

> permute.2.C.N   <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.553, p-value = 0.0101
alternative hypothesis: true mu is not equal to 0

> permute.2.C.NWSH <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.0179, p-value = 0.04336
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(23624)
> permute.2.N.WSHN   <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.1608, p-value = 0.2479
alternative hypothesis: true mu is not equal to 0

> permute.2.WSH.NWSH <- washb.permute(Y=ad$hcz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.3017, p-value = 0.1946
alternative hypothesis: true mu is not equal to 0

> 
> 
> #---------------------------------------
> # put objects in the standard format
> #---------------------------------------
> t1h1res <- list(permute.1.C.W,permute.1.C.S,permute.1.C.H,permute.1.C.WSH,permute.1.C.N,permute.1.C.NWSH)
> hcz_t1_h1_pval_unadj <- as.matrix(sapply(t1h1res,function(x) x$p.value),nrow=6)
> rownames(hcz_t1_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t1h3res <- list(permute.1.N.WSHN,permute.1.WSH.NWSH)
> hcz_t1_h3_pval_unadj <- as.matrix(sapply(t1h3res,function(x) x$p.value),nrow=6)
> rownames(hcz_t1_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> t2h1res <- list(permute.2.C.W,permute.2.C.S,permute.2.C.H,permute.2.C.WSH,permute.2.C.N,permute.2.C.NWSH)
> hcz_t2_h1_pval_unadj <- as.matrix(sapply(t2h1res,function(x) x$p.value),nrow=6)
> rownames(hcz_t2_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t2h3res <- list(permute.2.N.WSHN,permute.2.WSH.NWSH)
> hcz_t2_h3_pval_unadj <- as.matrix(sapply(t2h3res,function(x) x$p.value),nrow=6)
> rownames(hcz_t2_h3_pval_unadj) <-c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> 
> #---------------------------------------
> # print results
> #---------------------------------------
> hcz_t1_h1_pval_unadj
                       [,1]
Water v C           0.16828
Sanitation v C      0.58874
Handwashing v C     0.63892
WSH v C             0.52892
Nutrition v C       0.02854
Nutrition + WSH v C 0.13714
> 
> hcz_t1_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.35467
Nutrition + WSH v WSH       0.06427
> 
> hcz_t2_h1_pval_unadj
                       [,1]
Water v C           0.56028
Sanitation v C      0.87809
Handwashing v C     0.58359
WSH v C             0.57979
Nutrition v C       0.01010
Nutrition + WSH v C 0.04336
> 
> hcz_t2_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.24790
Nutrition + WSH v WSH       0.19458
> 
> #---------------------------------------
> # add suffix for replication
> #---------------------------------------
> hcz_t1_h1_pval_unadj_b <- hcz_t1_h1_pval_unadj
> hcz_t1_h3_pval_unadj_b <- hcz_t1_h3_pval_unadj
> hcz_t2_h1_pval_unadj_b <- hcz_t2_h1_pval_unadj
> hcz_t2_h3_pval_unadj_b <- hcz_t2_h3_pval_unadj
> rm(hcz_t1_h1_pval_unadj,hcz_t1_h3_pval_unadj,hcz_t2_h1_pval_unadj,hcz_t2_h3_pval_unadj)
> 
> #---------------------------------------
> # save all of the results
> # excluding the datasets
> #---------------------------------------
> rm(d,ad)
> rm(t1h1res,t1h3res,t2h1res,t2h3res)
> save.image("~/dropbox/WBB-primary-analysis/results/raw/ben/bangladesh-hcz-unadj-permute.RData")
> 
> 
> 
> proc.time()
   user  system elapsed 
 16.572   0.906  18.182 
