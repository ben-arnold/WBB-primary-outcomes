
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #---------------------------------------
> # whz-unadj-permute.R
> #
> # ben arnold (benarnold@berkeley.edu)
> #
> # unadjusted permutation tests for
> # differences in whz at year 1 and year 2
> # follow-ups
> #---------------------------------------
> 
> #---------------------------------------
> # preamble
> #---------------------------------------
> rm(list=ls())
> library(plyr)
> library(coin)
Loading required package: survival
> 
> # source the base functions
> # which includes the permutation test function used below
> source("~/WBBpa/src/basefns/washb-base-functions.R")
> 
> 
> #---------------------------------------
> # load the anthropometry analysis data
> #---------------------------------------
> d <- read.csv("~/dropbox/WBB-primary-analysis/data/final/ben/washb-bangladesh-anthro.csv")
> 
> d$block <- as.factor(d$block)
> 
> # subset the anthropometry to target children (excluding siblings)
> dim(d)
[1] 9341   49
> d <- subset(d,tchild=="Target child")
> dim(d)
[1] 9341   49
> 
> # Drop children with extreme whz values
> table(d$whz_x)

   0    1 
9283   22 
> d <- subset(d,whz_x!=1)
> 
> # Exclude children with missing data (none)
> table(is.na(d$whz))

FALSE 
 9283 
> 
> #---------------------------------------
> # YEAR 1
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4695 4588 
> ad <- subset(d,svy==1)
> dim(ad)
[1] 4695   49
> 
> # Hypothesis 1 permutation tests
> set.seed(2342)
> permute.1.C.W <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.062367, p-value = 0.9525
alternative hypothesis: true mu is not equal to 0

> permute.1.C.S <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.0562, p-value = 0.2916
alternative hypothesis: true mu is not equal to 0

> permute.1.C.H <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.082486, p-value = 0.9364
alternative hypothesis: true mu is not equal to 0

> permute.1.C.WSH <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.12272, p-value = 0.9044
alternative hypothesis: true mu is not equal to 0

> permute.1.C.N   <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.726, p-value = 0.00592
alternative hypothesis: true mu is not equal to 0

> permute.1.C.NWSH <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.1466, p-value = 0.03196
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(4524)
> permute.1.N.WSHN   <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.93551, p-value = 0.3537
alternative hypothesis: true mu is not equal to 0

> permute.1.WSH.NWSH <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.2534, p-value = 0.2097
alternative hypothesis: true mu is not equal to 0

> 
> #---------------------------------------
> # YEAR 2
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4695 4588 
> ad <- subset(d,svy==2)
> dim(ad)
[1] 4588   49
> 
> # Hypothesis 1 permutation tests
> set.seed(523423)
> permute.2.C.W <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.99586, p-value = 0.321
alternative hypothesis: true mu is not equal to 0

> permute.2.C.S <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.05432, p-value = 0.9578
alternative hypothesis: true mu is not equal to 0

> permute.2.C.H <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.034201, p-value = 0.9744
alternative hypothesis: true mu is not equal to 0

> permute.2.C.WSH <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.02213, p-value = 0.9844
alternative hypothesis: true mu is not equal to 0

> permute.2.C.N   <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.4444, p-value = 0.0148
alternative hypothesis: true mu is not equal to 0

> permute.2.C.NWSH <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.7684, p-value = 0.07744
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(23624)
> permute.2.N.WSHN   <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.2594, p-value = 0.2096
alternative hypothesis: true mu is not equal to 0

> permute.2.WSH.NWSH <- washb.permute(Y=ad$whz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.1206, p-value = 0.2627
alternative hypothesis: true mu is not equal to 0

> 
> 
> #---------------------------------------
> # put objects in the standard format
> #---------------------------------------
> t1h1res <- list(permute.1.C.W,permute.1.C.S,permute.1.C.H,permute.1.C.WSH,permute.1.C.N,permute.1.C.NWSH)
> whz_t1_h1_pval_unadj <- as.matrix(sapply(t1h1res,function(x) x$p.value),nrow=6)
> rownames(whz_t1_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t1h3res <- list(permute.1.N.WSHN,permute.1.WSH.NWSH)
> whz_t1_h3_pval_unadj <- as.matrix(sapply(t1h3res,function(x) x$p.value),nrow=6)
> rownames(whz_t1_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> t2h1res <- list(permute.2.C.W,permute.2.C.S,permute.2.C.H,permute.2.C.WSH,permute.2.C.N,permute.2.C.NWSH)
> whz_t2_h1_pval_unadj <- as.matrix(sapply(t2h1res,function(x) x$p.value),nrow=6)
> rownames(whz_t2_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t2h3res <- list(permute.2.N.WSHN,permute.2.WSH.NWSH)
> whz_t2_h3_pval_unadj <- as.matrix(sapply(t2h3res,function(x) x$p.value),nrow=6)
> rownames(whz_t2_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> 
> #---------------------------------------
> # print results
> #---------------------------------------
> whz_t1_h1_pval_unadj
                       [,1]
Water v C           0.95246
Sanitation v C      0.29161
Handwashing v C     0.93640
WSH v C             0.90437
Nutrition v C       0.00592
Nutrition + WSH v C 0.03196
> 
> whz_t1_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.35374
Nutrition + WSH v WSH       0.20973
> 
> whz_t2_h1_pval_unadj
                       [,1]
Water v C           0.32097
Sanitation v C      0.95785
Handwashing v C     0.97441
WSH v C             0.98444
Nutrition v C       0.01480
Nutrition + WSH v C 0.07744
> 
> whz_t2_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.20960
Nutrition + WSH v WSH       0.26273
> 
> #---------------------------------------
> # add suffix for replication
> #---------------------------------------
> whz_t1_h1_pval_unadj_b <- whz_t1_h1_pval_unadj
> whz_t1_h3_pval_unadj_b <- whz_t1_h3_pval_unadj
> whz_t2_h1_pval_unadj_b <- whz_t2_h1_pval_unadj
> whz_t2_h3_pval_unadj_b <- whz_t2_h3_pval_unadj
> rm(whz_t1_h1_pval_unadj,whz_t1_h3_pval_unadj,whz_t2_h1_pval_unadj,whz_t2_h3_pval_unadj)
> 
> #---------------------------------------
> # save all of the results
> # excluding the datasets
> #---------------------------------------
> rm(d,ad)
> rm(t1h1res,t1h3res,t2h1res,t2h3res)
> save.image("~/dropbox/WBB-primary-analysis/results/raw/ben/bangladesh-whz-unadj-permute.RData")
> 
> 
> 
> proc.time()
   user  system elapsed 
 15.353   0.759  16.488 
