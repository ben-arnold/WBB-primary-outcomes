
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #---------------------------------------
> # waz-unadj-permute.R
> #
> # ben arnold (benarnold@berkeley.edu)
> #
> # unadjusted permutation tests for
> # differences in waz at year 1 and year 2
> # follow-ups
> #---------------------------------------
> 
> #---------------------------------------
> # preamble
> #---------------------------------------
> rm(list=ls())
> library(plyr)
> library(coin)
Loading required package: survival
> 
> # source the base functions
> # which includes the permutation test function used below
> source("~/WBBpa/src/basefns/washb-base-functions.R")
> 
> 
> #---------------------------------------
> # load the anthropometry analysis data
> #---------------------------------------
> d <- read.csv("~/dropbox/WBB-primary-analysis/data/final/ben/washb-bangladesh-anthro.csv")
> 
> d$block <- as.factor(d$block)
> 
> # subset the anthropometry to target children (excluding siblings)
> dim(d)
[1] 9341   49
> d <- subset(d,tchild=="Target child")
> dim(d)
[1] 9341   49
> 
> # Drop children with extreme waz values
> table(d$waz_x)

   0    1 
9336    5 
> d <- subset(d,waz_x!=1)
> 
> # Exclude children with missing data (none)
> table(is.na(d$waz))

FALSE 
 9336 
> 
> #---------------------------------------
> # YEAR 1
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4704 4632 
> ad <- subset(d,svy==1)
> dim(ad)
[1] 4704   49
> 
> # Hypothesis 1 permutation tests
> set.seed(2342)
> permute.1.C.W <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.16095, p-value = 0.8736
alternative hypothesis: true mu is not equal to 0

> permute.1.C.S <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.97977, p-value = 0.3311
alternative hypothesis: true mu is not equal to 0

> permute.1.C.H <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.80273, p-value = 0.424
alternative hypothesis: true mu is not equal to 0

> permute.1.C.WSH <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.65385, p-value = 0.5174
alternative hypothesis: true mu is not equal to 0

> permute.1.C.N   <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -3.1365, p-value = 0.0016
alternative hypothesis: true mu is not equal to 0

> permute.1.C.NWSH <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.6759, p-value = 0.09413
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(4524)
> permute.1.N.WSHN   <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.2534, p-value = 0.2118
alternative hypothesis: true mu is not equal to 0

> permute.1.WSH.NWSH <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.76651, p-value = 0.4446
alternative hypothesis: true mu is not equal to 0

> 
> #---------------------------------------
> # YEAR 2
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4704 4632 
> ad <- subset(d,svy==2)
> dim(ad)
[1] 4632   49
> 
> # Hypothesis 1 permutation tests
> set.seed(523423)
> permute.2.C.W <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.2534, p-value = 0.2122
alternative hypothesis: true mu is not equal to 0

> permute.2.C.S <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.026154, p-value = 0.9811
alternative hypothesis: true mu is not equal to 0

> permute.2.C.H <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.91941, p-value = 0.361
alternative hypothesis: true mu is not equal to 0

> permute.2.C.WSH <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.11669, p-value = 0.9083
alternative hypothesis: true mu is not equal to 0

> permute.2.C.N   <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -3.6797, p-value = 0.00024
alternative hypothesis: true mu is not equal to 0

> permute.2.C.NWSH <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.5571, p-value = 0.01045
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(23624)
> permute.2.N.WSHN   <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.5652, p-value = 0.1168
alternative hypothesis: true mu is not equal to 0

> permute.2.WSH.NWSH <- washb.permute(Y=ad$waz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.8972, p-value = 0.05808
alternative hypothesis: true mu is not equal to 0

> 
> 
> #---------------------------------------
> # put objects in the standard format
> #---------------------------------------
> t1h1res <- list(permute.1.C.W,permute.1.C.S,permute.1.C.H,permute.1.C.WSH,permute.1.C.N,permute.1.C.NWSH)
> waz_t1_h1_pval_unadj <- as.matrix(sapply(t1h1res,function(x) x$p.value),nrow=6)
> rownames(waz_t1_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t1h3res <- list(permute.1.N.WSHN,permute.1.WSH.NWSH)
> waz_t1_h3_pval_unadj <- as.matrix(sapply(t1h3res,function(x) x$p.value),nrow=6)
> rownames(waz_t1_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> t2h1res <- list(permute.2.C.W,permute.2.C.S,permute.2.C.H,permute.2.C.WSH,permute.2.C.N,permute.2.C.NWSH)
> waz_t2_h1_pval_unadj <- as.matrix(sapply(t2h1res,function(x) x$p.value),nrow=6)
> rownames(waz_t2_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t2h3res <- list(permute.2.N.WSHN,permute.2.WSH.NWSH)
> waz_t2_h3_pval_unadj <- as.matrix(sapply(t2h3res,function(x) x$p.value),nrow=6)
> rownames(waz_t2_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> 
> #---------------------------------------
> # print results
> #---------------------------------------
> waz_t1_h1_pval_unadj
                       [,1]
Water v C           0.87364
Sanitation v C      0.33109
Handwashing v C     0.42401
WSH v C             0.51745
Nutrition v C       0.00160
Nutrition + WSH v C 0.09413
> 
> waz_t1_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.21178
Nutrition + WSH v WSH       0.44455
> 
> waz_t2_h1_pval_unadj
                       [,1]
Water v C           0.21220
Sanitation v C      0.98110
Handwashing v C     0.36101
WSH v C             0.90826
Nutrition v C       0.00024
Nutrition + WSH v C 0.01045
> 
> waz_t2_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.11677
Nutrition + WSH v WSH       0.05808
> 
> #---------------------------------------
> # add suffix for replication
> #---------------------------------------
> waz_t1_h1_pval_unadj_b <- waz_t1_h1_pval_unadj
> waz_t1_h3_pval_unadj_b <- waz_t1_h3_pval_unadj
> waz_t2_h1_pval_unadj_b <- waz_t2_h1_pval_unadj
> waz_t2_h3_pval_unadj_b <- waz_t2_h3_pval_unadj
> rm(waz_t1_h1_pval_unadj,waz_t1_h3_pval_unadj,waz_t2_h1_pval_unadj,waz_t2_h3_pval_unadj)
> 
> #---------------------------------------
> # save all of the results
> # excluding the datasets
> #---------------------------------------
> rm(d,ad)
> rm(t1h1res,t1h3res,t2h1res,t2h3res)
> save.image("~/dropbox/WBB-primary-analysis/results/raw/ben/bangladesh-waz-unadj-permute.RData")
> 
> 
> 
> proc.time()
   user  system elapsed 
 16.602   0.854  18.203 
