
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #---------------------------------------
> # laz-unadj-permute.R
> #
> # ben arnold (benarnold@berkeley.edu)
> #
> # unadjusted permutation tests for
> # differences in LAZ at year 1 and year 2
> # follow-ups
> #---------------------------------------
> 
> #---------------------------------------
> # preamble
> #---------------------------------------
> rm(list=ls())
> library(plyr)
> library(coin)
Loading required package: survival
> 
> # source the base functions
> # which includes the permutation test function used below
> source("~/WBBpa/src/basefns/washb-base-functions.R")
> 
> 
> #---------------------------------------
> # load the anthropometry analysis data
> #---------------------------------------
> d <- read.csv("~/dropbox/WBB-primary-analysis/data/final/ben/washb-bangladesh-anthro.csv")
> 
> d$block <- as.factor(d$block)
> 
> # subset the anthropometry to target children (excluding siblings)
> dim(d)
[1] 9341   49
> d <- subset(d,tchild=="Target child")
> dim(d)
[1] 9341   49
> 
> # Drop children with extreme LAZ values
> table(d$laz_x)

   0    1 
9277   28 
> d <- subset(d,laz_x!=1)
> 
> # Exclude children with missing data (none)
> table(is.na(d$laz))

FALSE 
 9277 
> 
> #---------------------------------------
> # YEAR 1
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4693 4584 
> ad <- subset(d,svy==1)
> dim(ad)
[1] 4693   49
> 
> # Hypothesis 1 permutation tests
> set.seed(2342)
> permute.1.C.W <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.19314, p-value = 0.8488
alternative hypothesis: true mu is not equal to 0

> permute.1.C.S <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.17503, p-value = 0.8621
alternative hypothesis: true mu is not equal to 0

> permute.1.C.H <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.6598, p-value = 0.09733
alternative hypothesis: true mu is not equal to 0

> permute.1.C.WSH <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.90734, p-value = 0.3674
alternative hypothesis: true mu is not equal to 0

> permute.1.C.N   <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.5088, p-value = 0.01154
alternative hypothesis: true mu is not equal to 0

> permute.1.C.NWSH <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.44059, p-value = 0.6614
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(4524)
> permute.1.N.WSHN   <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.4425, p-value = 0.1487
alternative hypothesis: true mu is not equal to 0

> permute.1.WSH.NWSH <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.092545, p-value = 0.9283
alternative hypothesis: true mu is not equal to 0

> 
> #---------------------------------------
> # YEAR 2
> #---------------------------------------
> # subset to the relevant measurement
> table(d$svy)

   1    2 
4693 4584 
> ad <- subset(d,svy==2)
> dim(ad)
[1] 4584   49
> 
> # Hypothesis 1 permutation tests
> set.seed(523423)
> permute.2.C.W <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Water"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.0039, p-value = 0.3175
alternative hypothesis: true mu is not equal to 0

> permute.2.C.S <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Sanitation"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 0.37219, p-value = 0.7126
alternative hypothesis: true mu is not equal to 0

> permute.2.C.H <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Handwashing"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.3821, p-value = 0.1691
alternative hypothesis: true mu is not equal to 0

> permute.2.C.WSH <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -0.20923, p-value = 0.8353
alternative hypothesis: true mu is not equal to 0

> permute.2.C.N   <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Nutrition"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -4.4924, p-value = 1e-05
alternative hypothesis: true mu is not equal to 0

> permute.2.C.NWSH <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Control","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -2.1788, p-value = 0.02935
alternative hypothesis: true mu is not equal to 0

> 
> # Hypothesis 3 permutation tests
> set.seed(23624)
> permute.2.N.WSHN   <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("Nutrition","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = 1.8127, p-value = 0.06955
alternative hypothesis: true mu is not equal to 0

> permute.2.WSH.NWSH <- washb.permute(Y=ad$laz,tr=ad$tr,block=ad$block,c("WSH","Nutrition + WSH"))

	Approximative Wilcoxon-Pratt Signed-Rank Test

data:  y by x (pos, neg) 
	 stratified by block
Z = -1.6155, p-value = 0.1064
alternative hypothesis: true mu is not equal to 0

> 
> 
> #---------------------------------------
> # put objects in the standard format
> #---------------------------------------
> t1h1res <- list(permute.1.C.W,permute.1.C.S,permute.1.C.H,permute.1.C.WSH,permute.1.C.N,permute.1.C.NWSH)
> laz_t1_h1_pval_unadj <- as.matrix(sapply(t1h1res,function(x) x$p.value),nrow=6)
> rownames(laz_t1_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t1h3res <- list(permute.1.N.WSHN,permute.1.WSH.NWSH)
> laz_t1_h3_pval_unadj <- as.matrix(sapply(t1h3res,function(x) x$p.value),nrow=6)
> rownames(laz_t1_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> t2h1res <- list(permute.2.C.W,permute.2.C.S,permute.2.C.H,permute.2.C.WSH,permute.2.C.N,permute.2.C.NWSH)
> laz_t2_h1_pval_unadj <- as.matrix(sapply(t2h1res,function(x) x$p.value),nrow=6)
> rownames(laz_t2_h1_pval_unadj) <- c("Water v C","Sanitation v C","Handwashing v C","WSH v C","Nutrition v C","Nutrition + WSH v C")
> 
> t2h3res <- list(permute.2.N.WSHN,permute.2.WSH.NWSH)
> laz_t2_h3_pval_unadj <- as.matrix(sapply(t2h3res,function(x) x$p.value),nrow=6)
> rownames(laz_t2_h3_pval_unadj) <- c("Nutrition + WSH v Nutrition","Nutrition + WSH v WSH")
> 
> 
> #---------------------------------------
> # print results
> #---------------------------------------
> laz_t1_h1_pval_unadj
                       [,1]
Water v C           0.84882
Sanitation v C      0.86207
Handwashing v C     0.09733
WSH v C             0.36738
Nutrition v C       0.01154
Nutrition + WSH v C 0.66136
> 
> laz_t1_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.14867
Nutrition + WSH v WSH       0.92830
> 
> laz_t2_h1_pval_unadj
                       [,1]
Water v C           0.31748
Sanitation v C      0.71261
Handwashing v C     0.16915
WSH v C             0.83534
Nutrition v C       0.00001
Nutrition + WSH v C 0.02935
> 
> laz_t2_h3_pval_unadj
                               [,1]
Nutrition + WSH v Nutrition 0.06955
Nutrition + WSH v WSH       0.10641
> 
> #---------------------------------------
> # add suffix for replication
> #---------------------------------------
> laz_t1_h1_pval_unadj_b <- laz_t1_h1_pval_unadj
> laz_t1_h3_pval_unadj_b <- laz_t1_h3_pval_unadj
> laz_t2_h1_pval_unadj_b <- laz_t2_h1_pval_unadj
> laz_t2_h3_pval_unadj_b <- laz_t2_h3_pval_unadj
> rm(laz_t1_h1_pval_unadj,laz_t1_h3_pval_unadj,laz_t2_h1_pval_unadj,laz_t2_h3_pval_unadj)
> 
> #---------------------------------------
> # save all of the results
> # excluding the datasets
> #---------------------------------------
> rm(d,ad)
> rm(t1h1res,t1h3res,t2h1res,t2h3res)
> save.image("~/dropbox/WBB-primary-analysis/results/raw/ben/bangladesh-laz-unadj-permute.RData")
> 
> 
> 
> proc.time()
   user  system elapsed 
 16.027   0.840  17.575 
